import { Box, Stack, Typography, useMediaQuery } from "@mui/material";
import { Container } from "@mui/system";
import React from "react";
import { Swiper, SwiperSlide } from "swiper/react";
import { Navigation } from "swiper";
import "swiper/css";
import "swiper/css/navigation";

interface Props {
  isMobile: boolean;
}

interface WinnerProps {
  img: string;
  name: string;
  desc: string;
  isMobile: boolean;
}

const WinnerCard = ({ img, name, desc, isMobile }: WinnerProps) => {
  return (
    <Stack
      direction={"column"}
      sx={{
        width: isMobile ? "400px" : "300px",
        height: isMobile ? "910px" : "800px",
        background:
          "linear-gradient(218.58deg, #343434 10.35%, #3E3E3E 94.68%)",
      }}
      spacing={"16px"}
    >
      <Box
        component={"img"}
        src={img}
        sx={{ height: isMobile ? "400px" : "320px", objectFit: "cover" }}
      />
      <Typography
        variant="header"
        sx={{
          fontSize: "32px",
          color: "#DCDCDC",
          lineHeight: "53.76px",
          textAlign: "center",
        }}
      >
        {name}
      </Typography>
      <Typography
        sx={{
          fontSize: "16px",
          color: "#DCDCDC",
          fontFamily: "Gotham Pro Light",
          lineHeight: "20.8px",
          px: "10px",
          textAlign: "justify",
          whiteSpace: "pre-line",
        }}
      >
        {desc}
      </Typography>
    </Stack>
  );
};

const WinnersCarousel = ({ isMobile }: Props) => {
  const navigationPrevRef = React.useRef(null);
  const navigationNextRef = React.useRef(null);
  const breakpoints = useMediaQuery("(min-width:415px)");

  const [showLeftArrow, setShowLeftArrow] = React.useState(false);
  const [showRightArrow, setShowRightArrow] = React.useState(true);
  const [activeIndex, setActiveIndex] = React.useState(0);
  const [isLastIndex, setIsLastIndex] = React.useState(false);

  // const handleOnMouse = (state: any) => {
  //   if (activeIndex > 0) {
  //     setShowLeftArrow(state);
  //   } else {
  //     setShowLeftArrow(false);
  //   }
  //   if (isLastIndex) {
  //     setShowRightArrow(false);
  //   } else {
  //     setShowRightArrow(state);
  //   }
  // };

  const handleChangeIndex = (index: number, lastIndex: number) => {
    setActiveIndex(index);
    if (index === 0) {
      setShowLeftArrow(false);
    } else {
      setShowLeftArrow(true);
    }
    if (lastIndex === 1) {
      setIsLastIndex(true);
      setShowRightArrow(false);
    } else {
      setIsLastIndex(false);
      setShowRightArrow(true);
    }
  };

  return (
    <Box
      sx={{
        background: "#232323",
        minHeight: isMobile ? "1276px" : "1123px",
        width: "100%",
        position: "relative",
      }}
    >
      <Box
        sx={{
          backgroundImage: isMobile
            ? "url(/images/bg/winners.png)"
            : "url(/images/bg/mobile/winners.png)",
          backgroundRepeat: "no-repeat",
          backgroundSize: "cover",
          position: "absolute",
          width: "100%",
          height: "100%",
          pt: isMobile ? "90px" : "64px",
        }}
      >
        <Stack
          sx={{
            width: "100%",
            justifyContent: "center",
            alignItems: "center",
          }}
        >
          <Typography
            variant={"header"}
            sx={{
              fontSize: isMobile ? "96px" : "48px",
              lineHeight: isMobile ? "76.8px" : "57.6px",
              textAlign: "center",
            }}
          >
            –ü–æ–±–µ–¥–∏—Ç–µ–ª–∏ –ø—Ä–æ—à–ª–æ–≥–æ —Ñ–µ—Å—Ç–∏–≤–∞–ª—è
          </Typography>
        </Stack>
        <Container disableGutters sx={{ mt: "75px", position: "relative" }}>
          <Box sx={{ overflowX: "hidden" }}>
            <Swiper
              style={{
                paddingLeft: isMobile ? "0px" : "15px",
              }}
              modules={[Navigation]}
              navigation={{
                prevEl: navigationPrevRef.current,
                nextEl: navigationNextRef.current,
              }}
              slidesPerView={isMobile ? 2.8 : breakpoints ? 1.5 : 1.2}
              direction={"horizontal"}
              spaceBetween={20}
              resistance={false}
              onActiveIndexChange={(e: any) =>
                handleChangeIndex(e.activeIndex, e.progress)
              }
              onReachBeginning={() => setShowLeftArrow(false)}
              onReachEnd={() => setShowRightArrow(false)}
            >
              <SwiperSlide>
                <WinnerCard
                  img="images/winners/–ú–∏—Ö–∞–∏–ª –®–º—ã–∫–æ–≤.jpg"
                  name="–ú–∏—Ö–∞–∏–ª –®–º—ã–∫–æ–≤"
                  desc="–ú–∏—Ö–∞–∏–ª –®–º—ã–∫–æ–≤-–ø–æ–±–µ–¥–∏—Ç–µ–ª—å –§–µ—Å—Ç–∏–≤–∞–ª—è –ø—Ä—ã–∂–∫–æ–≤ —Å¬†—à–µ—Å—Ç–æ–º 2023 –≥–æ–¥–∞ –∏¬†—Ä–µ–∫–æ—Ä–¥—Å–º–µ–Ω –Ω–∞—à–µ–≥–æ —Ç—É—Ä–Ω–∏—Ä–∞ —Å¬†—Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–º 5.75"
                  isMobile={isMobile}
                />
              </SwiperSlide>
              <SwiperSlide>
                <WinnerCard
                  img="images/winners/–¢–∞—Ç—å—è–Ω–∞ –ö–∞–ª–∏–Ω–∏–Ω–∞.jpg"
                  name="–¢–∞—Ç—å—è–Ω–∞ –ö–∞–ª–∏–Ω–∏–Ω–∞"
                  desc={`–£¬†–¥–µ–≤—É—à–µ–∫ –≤¬†—É–ø–æ—Ä–Ω–æ–π –±–æ—Ä—å–±–µ –Ω–µ¬†—Ç–æ–ª—å–∫–æ —Å¬†—Å–æ–ø–µ—Ä–Ω–∏—Ü–∞–º–∏, –Ω–æ¬†–∏¬†—Å¬†–ø–ª–∞–Ω–∫–æ–πüòÅ–ø–æ–±–µ–¥—É –≤¬†2023 –≥–æ–¥–∞ –æ–¥–µ—Ä–∂–∞–ª–∞ –¢–∞—Ç—å—è–Ω–∞ –ö–∞–ª–∏–Ω–∏–Ω–∞, –µ–µ¬†—Ä–µ–∑—É–ª—å—Ç–∞—Ç 4.45, –ø–æ—Å–ª–µ —ç—Ç–æ–≥–æ –¢–∞—Ç—å—è–Ω–∞ —à—Ç—É—Ä–º–æ–≤–∞–ª–∞ —Å–≤–æ–π –ª–∏—á–Ω—ã–π —Ä–µ–∫–æ—Ä–¥ 4.56, –Ω–æ¬†–ø–æ–∫–∞ —á—Ç–æ –Ω–µ—É–¥–∞—á–Ω–æ, –≤—Å—ë –≤–ø–µ—Ä–µ–¥–∏ü§ûüèº–∂–¥–µ–º –¢–∞—Ç—å—è–Ω—É –≤¬†—ç—Ç–æ–º –≥–æ–¥—É –Ω–∞¬†—Ñ–µ—Å—Ç–∏–≤–∞–ª–µ —Å¬†–Ω–æ–≤—ã–º–∏ —Ä–µ–∫–æ—Ä–¥–∞–º–∏`}
                  isMobile={isMobile}
                />
              </SwiperSlide>
              <SwiperSlide>
                <WinnerCard
                  img="images/winners/–°–æ—Ñ–∏—è –î–æ–ª–∂–∏–∫–æ–≤–∞.jpg"
                  name="–°–æ—Ñ–∏—è –î–æ–ª–∂–∏–∫–æ–≤–∞"
                  desc="–ú–æ–ª–æ–¥—ã–µ —Ä–µ–±—è—Ç–∞, –ø—Ä–∏–≥–ª–∞—à–µ–Ω–Ω—ã–µ –≤¬†–æ—Å–Ω–æ–≤–Ω–æ–π —Å–æ—Å—Ç–∞–≤, –Ω–µ¬†—Å–º–æ—Ç—Ä—è –Ω–∞¬†–≤–æ–ª–Ω–µ–Ω–∏–µ, –Ω–∞—Å –Ω–µ¬†–ø–æ–¥–≤–µ–ª–∏üòçü§© –°–æ—Ñ–∏—è –î–æ–ª–∂–∏–∫–æ–≤–∞-–∑–≤–µ–∑–¥–æ—á–∫–∞, —Ç–æ–∂–µ –∑–∞–≤–æ–µ–≤–∞–ª–∞ —Å–µ—Ä–¥—Ü–∞ –±–æ–ª–µ–ª—å—â–∏–∫–æ–≤ –Ω–∞¬†—Ç—Ä–∏–±—É–Ω–∞—Ö! –°–æ–Ω—è –ø–æ–≤—Ç–æ—Ä–∏–ª–∞ —Å–≤–æ–π –ª–∏—á–Ω—ã–π —Ä–µ–∫–æ—Ä–¥ 3.95 –∏¬†–∑–∞–Ω—è–ª–∞ –ø–µ—Ä–≤–æ–µ –º–µ—Å—Ç–æ –≤¬†—Å–≤–æ–µ–π –≤–æ–∑—Ä–∞—Å—Ç–Ω–æ–π –≥—Ä—É–ø–ø–µ U18ü•á"
                  isMobile={isMobile}
                />
              </SwiperSlide>
              <SwiperSlide>
                <WinnerCard
                  img="images/winners/–ò–Ω–Ω–∞ –ì–∞–ª—å—á–∏–Ω–∞.jpg"
                  name="–ò–Ω–Ω–∞ –ì–∞–ª—å—á–∏–Ω–∞"
                  desc="–ò–Ω–Ω–∞ –ì–∞–ª—å—á–∏–Ω–∞, –ø—Ä–µ–¥—Å—Ç–∞–≤–∏—Ç–µ–ª—å–Ω–∏—Ü–∞ –û–º—Å–∫–æ–π –æ–±–ª–∞—Å—Ç–∏, –ø–æ–≤—Ç–æ—Ä–∏–ª–∞ –ª–∏—á–Ω—ã–π —Ä–µ–∫–æ—Ä–¥-4.10 –∏¬†—Å—Ç–∞–ª–∞ –ø–µ—Ä–≤–æ–π –≤¬†–≥—Ä—É–ø–ø–µ U20."
                  isMobile={isMobile}
                />
              </SwiperSlide>
              <SwiperSlide>
                <WinnerCard
                  img="images/winners/–ë—É–≥–∞–µ–Ω–∫–æ –ó–∞—Ö–∞—Ä.jpg"
                  name="–ë—É–≥–∞–µ–Ω–∫–æ –ó–∞—Ö–∞—Ä"
                  desc="–ë—É–≥–∞–µ–Ω–∫–æ –ó–∞—Ö–∞—Ä —Å—Ç–∞–ª –ø–µ—Ä–≤—ã–º –≤¬†–≥—Ä—É–ø–ø–µ U18¬†—Å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–º 5.00"
                  isMobile={isMobile}
                />
              </SwiperSlide>
              <SwiperSlide>
                <WinnerCard
                  img="images/winners/–†–∞–Ω—ç–ª—å –®–∞—Ñ–∏–∫–æ–≤.jpg"
                  name="–†–∞–Ω—ç–ª—å –®–∞—Ñ–∏–∫–æ–≤"
                  desc="–†–∞–Ω—ç–ª—å –®–∞—Ñ–∏–∫–æ–≤ –≤—ã–∏–≥—Ä–∞–ª –≤¬†–≤–æ–∑—Ä–∞—Å—Ç–Ω–æ–π –≥—Ä—É–ø–ø–µ U20 –∏¬†–≤–ø–ª–æ—Ç–Ω—É—é –ø—Ä–∏–±–ª–∏–∑–∏–ª—Å—è –∫¬†–ª–∏—á–Ω–æ–º—É —Ä–µ–∫–æ—Ä–¥—É, –ø–æ–∫–∞–∑–∞–≤ 5.30"
                  isMobile={isMobile}
                />
              </SwiperSlide>
            </Swiper>
            <Box
              ref={navigationNextRef}
              component={"img"}
              src={
                isMobile
                  ? "images/logos/arrow.png"
                  : "images/logos/arrow-mobile.png"
              }
              sx={{
                height: isMobile ? "70px" : "64px",
                maxWidth: isMobile ? "103px" : "60px",
                position: "absolute",
                right: isMobile ? "-45px" : 0,
                top: "40%",
                zIndex: 2,
                display: showRightArrow ? "block" : "none",
              }}
            />
            <Box
              ref={navigationPrevRef}
              component={"img"}
              src={
                isMobile
                  ? "images/logos/arrow.png"
                  : "images/logos/arrow-mobile.png"
              }
              sx={{
                height: isMobile ? "70px" : "64px",
                maxWidth: isMobile ? "103px" : "60px",
                transform: "rotate(180deg)",
                position: "absolute",
                left: isMobile ? "-45px" : 0,
                top: "40%",
                zIndex: 2,
                display: showLeftArrow ? "block" : "none",
              }}
            />
          </Box>
        </Container>
      </Box>
    </Box>
  );
};

export default WinnersCarousel;
